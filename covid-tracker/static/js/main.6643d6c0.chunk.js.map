{"version":3,"sources":["components/CountryPicker/CountryPicker.module.css","components/Chart/Chart.module.css","App.module.css","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/CountryPicker/CountryPicker.jsx","components/Chart/Chart.jsx","components/Header/Header.jsx","App.js","index.js"],"names":["module","exports","Cards","data","cases","deaths","recovered","active","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","url","fetchData","country","a","changeableURL","axios","get","modifiedData","fetchDailyData","dailyURL","timeline","fetchCountries","map","Countries","handleCountryChange","useState","countries","setCountries","value","setValue","useEffect","fetchAPI","FormControl","formControl","Autocomplete","id","options","style","width","onChange","event","newValue","renderInput","params","TextField","label","Chart","dailyData","setDailyData","initialDailyData","fetchMyAPI","console","log","cases_dates","Object","keys","cases_values","values","deaths_values","recovered_values","lineChart","length","labels","datasets","borderColor","fill","backgroundColor","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","title","link","Header","classes","AppBar","position","Toolbar","Button","Link","target","href","App","state","setState","this","CountryPicker","React","Component","ReacDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6643d6c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__22hI_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1cSm1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__iCWZ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1zxTs\",\"card\":\"Cards_card__2y_3j\",\"cases\":\"Cards_cases__2JxlF\",\"recovered\":\"Cards_recovered__uX_2p\",\"deaths\":\"Cards_deaths__A85Re\",\"active\":\"Cards_active__1KuTp\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nconst Cards = ({ data: { cases, deaths, recovered, active } }) => {\r\n  if (!cases || null) {\r\n    return \"Loading\";\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={2}\r\n          className={cx(styles.card, styles.cases)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Total Cases\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={cases} duration={2} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date().toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of reported cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={2}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={recovered} duration={2} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date().toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of recoveries of Covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={2}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={deaths} duration={2} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date().toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of deaths of Covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={2}\r\n          className={cx(styles.card, styles.active)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Active\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={active} duration={2} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date().toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of Active cases of Covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://corona.lmao.ninja/v2\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableURL = url;\r\n  if (country) {\r\n    changeableURL = `${url}/countries/${country}?yesterday=false&strict=true`;\r\n  } else {\r\n    changeableURL = `${url}/all`;\r\n  }\r\n  try {\r\n    const {\r\n      data: { cases, deaths, recovered, active },\r\n    } = await axios.get(`${changeableURL}`);\r\n    const modifiedData = {\r\n      cases,\r\n      deaths,\r\n      recovered,\r\n      active,\r\n    };\r\n\r\n    return modifiedData;\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchDailyData = async (country) => {\r\n  let dailyURL = url;\r\n  if (country) {\r\n    dailyURL = `${url}/historical/${country}?lastdays=150`;\r\n    const {\r\n      data: { timeline },\r\n    } = await axios.get(`${dailyURL}`);\r\n    return timeline;\r\n  } else {\r\n    dailyURL = `${url}/historical/all?lastdays=150`;\r\n    const { data } = await axios.get(`${dailyURL}`);\r\n    return data;\r\n  }\r\n  try {\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/countries`);\r\n    return data.map((data) => data.country);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { fetchCountries } from \"../../api\";\r\n\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      {/* <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => handleCountryChange(e.target.value)}\r\n      >\r\n        <option value=\"\">Global</option>\r\n        {countries.map((country, i) => (\r\n          <option key={i} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect> */}\r\n\r\n      <Autocomplete\r\n        value={value}\r\n        id=\"controllable-states-demo\"\r\n        options={countries}\r\n        style={{ width: 300 }}\r\n        onChange={(event, newValue) => {\r\n          setValue(newValue);\r\n          handleCountryChange(newValue);\r\n        }}\r\n        renderInput={(params) => (\r\n          <TextField {...params} label=\"Select a Country\" variant=\"outlined\" />\r\n        )}\r\n      />\r\n      {/* <Typography\r\n        style={{ marginTop: 30, alignContent: \"center\" }}\r\n        variant=\"h5\"\r\n      >\r\n        {value}\r\n      </Typography> */}\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countries;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api/index\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({ country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData(country);\r\n      setDailyData(initialDailyData);\r\n    };\r\n    fetchMyAPI();\r\n  }, [country]);\r\n  if (!dailyData.cases) {\r\n    return \"Loading chart\";\r\n  }\r\n  console.log(country);\r\n\r\n  const cases_dates = Object.keys(dailyData.cases);\r\n  const cases_values = Object.values(dailyData.cases);\r\n  const deaths_values = Object.values(dailyData.deaths);\r\n  const recovered_values = Object.values(dailyData.recovered);\r\n  // const active_values = Object.values(dailyData.active);\r\n\r\n  const lineChart =\r\n    cases_dates.length !== 0 ? (\r\n      <Line\r\n        data={{\r\n          labels: cases_dates,\r\n          datasets: [\r\n            {\r\n              data: cases_values,\r\n              label: \"Infected\",\r\n              borderColor: \"#3333ff\",\r\n              fill: false,\r\n            },\r\n            {\r\n              data: deaths_values,\r\n              label: \"Deaths\",\r\n              borderColor: \"red\",\r\n              backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n              fill: false,\r\n            },\r\n            {\r\n              data: recovered_values,\r\n              label: \"Recovered\",\r\n              borderColor: \"green\",\r\n              backgroundColor: \"rgba(0, 255, 0, 0.5)\",\r\n              fill: false,\r\n            },\r\n            // {\r\n            //   data: recovered_values,\r\n            //   label: \"Active\",\r\n            //   borderColor: \"yellow\",\r\n            //   backgroundColor: \"rgba(0, 255, 0, 0.5)\",\r\n            //   fill: false,\r\n            // },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null;\r\n\r\n  return <div className={styles.container}>{lineChart}</div>;\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport styles from \"./Header.module.css\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  link: {\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Covid-19 Tracker\r\n          </Typography>\r\n          <Button color=\"inherit\">\r\n            <Link\r\n              target=\"_blank\"\r\n              href=\"https://www.who.int/health-topics/coronavirus#tab=tab_1\"\r\n              className={classes.link}\r\n            >\r\n              What is COVID-19\r\n            </Link>\r\n          </Button>\r\n          <Button color=\"inherit\">\r\n            <Link\r\n              target=\"_blank\"\r\n              href=\"https://www.who.int/health-topics/coronavirus#tab=tab_2\"\r\n              className={classes.link}\r\n            >\r\n              How to Stay Safe\r\n            </Link>\r\n          </Button>\r\n          <Button color=\"inherit\">\r\n            <Link\r\n              target=\"_blank\"\r\n              href=\"https://www.cdc.gov/coronavirus/2019-ncov/faq.html\"\r\n              className={classes.link}\r\n            >\r\n              FAQs\r\n            </Link>\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Cards, Chart, CountryPicker, Header } from \"./components\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData, fetchDailyData } from \"./api/index\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const data = await fetchData();\r\n    this.setState({ data: data });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const data = await fetchData(country);\r\n    this.setState({ data, country: country });\r\n  };\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div className={styles.container}>\r\n          <Cards data={data} />\r\n          <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n          <Chart country={country} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReacDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReacDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}